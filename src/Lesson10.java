import java.util.Arrays;

/*
* 1) Создать массив с набором слов (10-20 слов, должны встречаться повторяющиеся). Найти и вывести список уникальных слов,
* из которых состоит массив (дубликаты не считаем). Посчитать, сколько раз встречается каждое слово.
* 2) Написать простой класс Телефонный Справочник, который хранит в себе список фамилий и телефонных номеров. В этот
* телефонный справочник с помощью метода add() можно добавлять записи, а с помощью метода get() искать номер телефона
* по фамилии. Следует учесть, что под одной фамилией может быть несколько телефонов (в случае однофамильцев), тогда при
* запросе такой фамилии должны выводиться все телефоны. Желательно не добавлять лишний функционал (дополнительные поля
* (имя, отчество, адрес), взаимодействие с пользователем через консоль и т.д). Консоль использовать только для вывода
* результатов проверки телефонного справочника.
**/
public class Lesson10 {
    public static void main(String[] args) {
        // ------- задание №1 -------
        String[] myArray = MyArray.getArray();
        System.out.println("Исходный массив:\n" + Arrays.asList(myArray));
        MyArray.printUniqueWords(myArray);
        MyArray.printCounterWords(myArray);
        // ------- задание №2 -------
        MyPhoneBook myPhoneBook = new MyPhoneBook();
        myPhoneBook.add("Иванов", "+7(903)789-46-56");
        myPhoneBook.add("Петров", "+7(903)222-46-56");
        myPhoneBook.add("Сидоров", "+7(903)333-46-56");
        myPhoneBook.add("Колесников", "+7(903)444-46-56");
        myPhoneBook.add("Васильев", "+7(903)555-55-56");
        myPhoneBook.add("Петров", "+7(903)888-88-88");
        myPhoneBook.add("Петров", "+7(903)777-77-77");
        System.out.println("Телефоны сотрудника:" + myPhoneBook.getLastName("Петров"));
        // все номера и сотрудники (объединены)
        //myPhoneBook.print();
        }
}
